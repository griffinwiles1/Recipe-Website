@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800;900&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

/*----- CSS Tips -----
  
  --- Nested HTML --- 
  If the className is somewhere inside the container:
    .container:hover .className { background-color: yellow; }

  If the className is directly inside the container:
    .container:hover > .classname { background-color: yellow; }

  If the className is next to (after containers closing tag) the container:
    .container:hover + .className { background-color: yellow; }
  
  If the className is a sibling of the container:
    .container:hover ~ .className { background-color: yellow; }


*/

:root {
  --light: #c4d6e0;
  --lightMed: #93a4ad;
  --lightHeavy: #697c86;
  
  --dark: #3b5363;
  --darkMed: #28414d;
  --darkHeavy: #20303b;
  
  --checkboxShadow: var(--lightMed) 0 0 0 2px inset;
  --checkboxShadowDark: var(--darkHeavy) 0 0 0 2.5px inset;

}

* {
  scroll-behavior: smooth;
}

/* --- MISC --- */
.bodyFlex {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.taskButton {
  width: 3rem;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 3rem;
  text-align: center;
  outline: none;
}


/* --- checkbox --- */
.checkbox {
  width: 42px;
  display: inline-block;
  height: 3.25rem;
  position: relative;
  vertical-align: middle;
}

.checkbox input[type="checkbox"] {
  font-size: 1em;
  visibility: hidden;
}

.checkbox input[type="checkbox"] + span:before {
  position: absolute;
  top: 50%;
  right: auto;
  bottom: auto;
  left: 50%;
  width: 1em;
  height: 1em;
  transform: translate3d(-50%, -50%, 0);
  background: transparent;
  box-shadow: var(--checkboxShadow);
  content: "";
  display: flex;
}

.checkboxDark input[type="checkbox"] + span:before {
  box-shadow: var(--checkboxShadowDark);
}

.checkbox input[type="checkbox"]:checked + span:before {
  padding-left: 1px;
  padding-bottom: 1px;
  font-size: 16px;
  line-height: 24px;
  font-weight: bold;
  color: var(--lightMed);
  box-shadow: var(--lightMed) 0 0 0 2px inset;
  content: "âœ“";
  justify-content: center;
  align-items: center;
}

/* --- list-item --- */
.list-item {
  font-size: 16px;
  line-height: 24px;
  display: flex;
  flex-wrap: wrap;
  height: 3.25rem;
}

.list-item .title {
  overflow: hidden;
  display: flex;
  text-overflow: ellipsis;
  white-space: nowrap;
  flex: 1;
}

.list-item input[type="text"] {
  background: transparent;
}

.list-item input[type="text"]:focus {
  cursor: text;
}

.list-item.checked .delete-item {
  display: inline-block;
}

/* --- taskList --- */
.taskList:first-child {
  border-top-right-radius: .375rem;
  border-top-left-radius: .375rem;
}

.taskList:last-child {
  border-bottom-right-radius: .375rem;
  border-bottom-left-radius: .375rem;
}
